정보통신공학과 202101642 전진

연속 행렬 곱셈이란 주어진 행렬들의 곱을 구하기 위한 최소의 연산 횟수를 얻는 알고리즘이다. 행렬의 곱셈에서는
어떤 형태로 결합하느냐에 따라서 계산의 횟수가 달라진다. 이러한 성질을 이용하여 서로 다른 형태의 결합들을
비교해 최소의 연산 횟수를 구하는 것이다.

        A[3,4]             B[4,2]       A*B[3,2]    
        oooo               oo            oo 
        oooo       x       oo      =    oo
        oooo               oo            oo
                              oo

A*B의 연산횟수는 3*4*2이다.

A[5x4], B[4x3], C[3x6], D[6x10]일 때, 연속 행렬 곱셈의 알고리즘을 구체적으로 살펴보자.


C         1         2         3         4

1         0       A*B    A*B*C    A*B*C*D

2                   0       B*C      B*C*D

3                             0        C*D
                                                  
4                                      0    

=> A*B= 5x4x3= 60 (o)

=> B*C= 4x3x6= 72 (o)

=> C*D= 3x6x10= 180 (o)

=> A*B*C
    ->(A*B)*C= 5x3x6(=90) + 60= 150 (o)
    ->A*(B*C)= 5x4x6(=120) + 72= 192  

=> B*C*D
    ->(B*C)*D= 4x6x10(=240) + 72= 312 
    ->B*(C*D)= 4x3x10(=120) + 180= 300 (o)

=> A*B*C*D
    ->(A*B*C)*D= 5x6x10(=300) + 150= 450
    ->A*(B*C*D)= 5x4x10(=200) + 300= 500
    ->(A*B)*(C*D)= 5x3x10(=150) + 60+ 180= 390 (o)
   

C         1         2         3         4

1         0        60       150      390

2                   0         72      300

3                             0        180
                                                  
4                                       0   

따라서 A*B의 결과와 C*D의 결과를 먼저 구한 다음 각각의 결과를 곱하는 것이 가장 효과적이며,
이 식의 최소연산 횟수는 390회이다. 

이 연속 행렬 곱셈의 알고리즘을 구현하면 다음과 같다.



#include <stdio.h>

#define min(a, b) ((a)>(b)?(b):(a))

int matrix[500][2];
int dp[500][500];

int minimumcalculation(int n)
{
    int a, b;
    int i, j, k;

    for (i = 0; i < n; i++)
    {
        for (j = 0; j < n - i; j++) 
        {
            a = j;
            b = j + i;
            if (a == b)
            {
                dp[a][b] = 0;
            }
            else
            {
                dp[a][b] = 9999999999999; //최소의 연산 횟수를 구하기 위해 일단 무수히 크게 설정.
                for (k = a; k < b; k++) 
                {
                    dp[a][b] = min(dp[a][b], dp[a][k] + dp[k + 1][b] + (matrix[a][0] * matrix[k][1] * matrix[b][1]));
                }
            }
        }
    }

    return dp[0][n - 1];
}

void main() 
{
    int n, i, j;
    scanf("%d", &n);

    for (i = 0; i < n; i++) 
    {
        scanf("%d %d", &matrix[i][0], &matrix[i][1]);
    }

    int answer = minimumcalculation(n);
    
    printf("최소연산 횟수 : %d\n", answer);
}







                          