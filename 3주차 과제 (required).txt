퀵 정렬은 배열의 요소를 정렬하는 효율적인 방법인 분할 정복 알고리즘의 대표적인 예시로 pivot
이라는 기준점을 잡아 준 뒤 이 기준과 같거나 작은 값을 지닌 요소는 앞으로, 더 큰 값을 지닌 요소는
뒤로 위치하게 하여 작은 값과 큰 값을 갖는 각각의 데이터를 정렬하는 방법이다.

//퀵 정렬
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define SIZE 15
#define SWAP(x,y,t) ((t)=(x), (x)=(y), (y)=(t))

void makelist(int list[])
{
	for (int i = 0; i < SIZE; i++)
		list[i] = rand() % 100 + 1;
}

void printlist(int list[])
{
	for (int i = 0; i < SIZE; i++)
		printf("%d ", list[i]);
	printf("\n");
}

int partition(int list[], int left, int right)
{
	int pivot, temp, low, high;

	pivot = list[left];
	low = left;
	high = right + 1;

	do
	{
		do
		{
			low++;
		} while (list[low] < pivot);

		do
		{
			high--;
		} while (list[high] > pivot);

		if (low < high)
			SWAP(list[low], list[high], temp);

	} while (low < high);

	SWAP(list[left], list[high], temp);
	return high;
}

void quicksort(int list[], int left, int right)
{
	if (left < right)
	{
		int q = partition(list, left, right);
		quicksort(list, left, q - 1);
		quicksort(list, q + 1, right);
	}
}

void main()
{
	int list[SIZE];
	int sorted[SIZE];
	srand(time(NULL));

	makelist(list);
	printlist(list);

	quicksort(list, 0, SIZE - 1);
	printlist(list);
}